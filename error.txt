Snapshot/Resume Determinism Issue Discovered
============================================

Issue: mtg-89 - Randomized stress tests reveal non-deterministic behavior in snapshot/resume

The stress test successfully runs, but has discovered a critical issue:
Games do NOT produce the same results when stopped and resumed vs running continuously.

Test Results:
- Grizzly Bears: normal=34 turns (P2: 18 life), stop-go=81 turns (P2: 6 life)
- Royal Assassin: normal=120 turns (P2: 16 life), stop-go=121 turns (P2: 15 life)

Root Cause Analysis:
The issue appears to be with how the random number generator state is handled across snapshot/resume:
1. When a game is stopped and a snapshot is created, the RNG state may not be preserved
2. When resuming with --start-from, the Random controller likely reinitializes its RNG
3. This causes different choices to be made after resuming, leading to game divergence

Recommended Fixes:
1. Include RNG state in the GameSnapshot structure
2. When resuming, restore the RNG state from the snapshot
3. Ensure the Random controller uses the restored RNG state

The stress test itself is working correctly - it has successfully revealed a real bug in the snapshot/resume functionality.

Test Status:
- Test script: IMPLEMENTED and WORKING ✓
- Python test runner: INTEGRATED ✓
- Snapshot/resume functionality: BUG FOUND - needs fix

Next Steps:
1. Fix RNG state preservation in snapshot/resume (separate task)
2. Re-run stress test after fix to verify determinism
3. Consider adding RNG state comparison to the test for better diagnostics
